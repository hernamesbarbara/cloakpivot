[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cloakpivot"
version = "2.0.0"
description = "Simple, reversible PII masking for documents with one-line API"
authors = [
    {name = "hernamesbarbara", email = "austin@aya.sh"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
keywords = ["pii", "privacy", "document", "masking", "presidio", "docling", "data-privacy", "gdpr", "anonymization"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: Text Processing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "docling>=1.7.0",
    "docling-core>=1.0.0",
    "presidio-analyzer>=2.2.0",
    "presidio-anonymizer>=2.2.0",
    "docpivot @ git+https://github.com/hernamesbarbara/docpivot.git@main",
    "click>=8.0.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "mypy>=1.5.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "types-click",
    "types-PyYAML",
]

[project.scripts]
cloakpivot = "cloakpivot.cli.main:main"

[project.urls]
"Homepage" = "https://github.com/hernamesbarbara/cloakpivot"
"Bug Tracker" = "https://github.com/hernamesbarbara/cloakpivot/issues"
"Documentation" = "https://github.com/hernamesbarbara/cloakpivot/tree/main/docs"
"Source" = "https://github.com/hernamesbarbara/cloakpivot"

[tool.setuptools.packages.find]
where = ["."]
include = ["cloakpivot*"]
exclude = ["tests*"]

# ========================================================================================
# Tool Configurations - Single Source of Truth
# ========================================================================================

# ----------------------------------------------------------------------------------------
# Black - Code Formatter
# ----------------------------------------------------------------------------------------
[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
  | __pycache__
)/
'''

# ----------------------------------------------------------------------------------------
# Ruff - Fast Python Linter with Integrated isort
# ----------------------------------------------------------------------------------------
[tool.ruff]
line-length = 100
target-version = "py311"
exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    "build",
    "dist",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "T20",  # flake8-print
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "PTH",  # flake8-use-pathlib
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "T201",  # print found (allow in CLI tools)
    "T203",  # pprint found (allow for debugging)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__ files
"tests/**/*.py" = ["T20"]  # allow print in tests

[tool.ruff.lint.isort]
known-first-party = ["cloakpivot"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

# ----------------------------------------------------------------------------------------
# MyPy - Static Type Checker with Gradual Typing
# ----------------------------------------------------------------------------------------
[tool.mypy]
python_version = "3.11"
files = ["cloakpivot"]
exclude = [
    "build",
    "dist",
    "tests",
    "scripts",
    "venv",
]

# Gradual typing approach - start permissive, tighten over time
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Per-module overrides for gradual adoption
[[tool.mypy.overrides]]
module = "cloakpivot.cli.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = [
    "presidio_analyzer.*",
    "presidio_anonymizer.*",
    "docpivot.*",
    "docling.*",
    "docling_core.*",
]
ignore_missing_imports = true

# ----------------------------------------------------------------------------------------
# Pytest - Testing Framework Configuration
# ----------------------------------------------------------------------------------------
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "-q",
    "--strict-markers",
    "--strict-config",
    "--cov=cloakpivot",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=60",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "unit: Unit tests (fast, isolated)",
    "integration: Integration tests (component interaction)",
    "e2e: End-to-end tests (full workflow)",
    "slow: Slow running tests (> 5 seconds)",
]
norecursedirs = [
    "*.egg",
    ".eggs",
    "dist",
    "build",
    "docs",
    ".tox",
    ".git",
    "__pycache__",
    "venv",
    ".venv",
]

# ----------------------------------------------------------------------------------------
# Coverage - Test Coverage Configuration
# ----------------------------------------------------------------------------------------
[tool.coverage.run]
source = ["cloakpivot"]
branch = true
parallel = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/setup.py",
    "*/scripts/*",
    "*/benchmarks/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
sort = "cover"
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if False:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"