[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cloakpivot"
version = "0.1.0"
description = "PII masking/unmasking on top of DocPivot and Presidio with reversible transformations"
authors = [
    {name = "CloakPivot Team", email = "contact@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
keywords = ["pii", "privacy", "document", "masking", "presidio", "docpivot"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: Text Processing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "docpivot @ file:///Users/hernamesbarbara/code/github/hernamesbarbara/docpivot",
    "presidio-analyzer>=2.2.0",
    "presidio-anonymizer>=2.2.0",
    "cryptography>=41.0.0",
    "click>=8.0.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
# Storage backend dependencies
s3 = [
    "boto3>=1.26.0",
]

gcs = [
    "google-cloud-storage>=2.10.0",
]

database = [
    "psycopg2-binary>=2.9.0",  # PostgreSQL support
    "sqlalchemy>=2.0.0",      # Optional ORM support
]

# Combined storage backends
storage = [
    "cloakpivot[s3,gcs,database]",
]

dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "types-PyYAML",
    "cloakpivot[storage]",  # Include storage backends in dev
]

test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]

[project.scripts]
cloakpivot = "cloakpivot.cli.main:main"

[project.entry-points."cloakpivot.plugins.strategies"]
# Strategy plugins can be registered here by external packages

[project.entry-points."cloakpivot.plugins.recognizers"]
# Recognizer plugins can be registered here by external packages

[project.entry-points."cloakpivot.storage.backends"]
# Storage backend plugins can be registered here by external packages
local = "cloakpivot.storage.backends.local:LocalStorage"
s3 = "cloakpivot.storage.backends.s3:S3Storage"
gcs = "cloakpivot.storage.backends.gcs:GCSStorage"
database = "cloakpivot.storage.backends.database:DatabaseStorage"

[project.urls]
"Homepage" = "https://github.com/example/cloakpivot"
"Bug Tracker" = "https://github.com/example/cloakpivot/issues"
"Documentation" = "https://cloakpivot.readthedocs.io"

[tool.setuptools.packages.find]
where = ["."]
include = ["cloakpivot*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "presidio_analyzer.*",
    "presidio_anonymizer.*",
    "docpivot.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["cloakpivot"]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]