name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-lint-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-lint-
          ${{ runner.os }}-pip-

    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black ruff mypy types-click types-PyYAML

    - name: Run black
      run: black --check cloakpivot/ tests/

    - name: Run ruff
      run: ruff check cloakpivot/ tests/

    - name: Run mypy
      run: mypy cloakpivot/

  test:
    name: Tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    needs: lint
    timeout-minutes: 20
    strategy:
      matrix:
        python-version: ["3.12"]  # Reduced matrix for faster PR checks
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: Cache spacy models
      uses: actions/cache@v4
      with:
        path: ~/.cache/spacy
        key: ${{ runner.os }}-spacy-sm-v1

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Download small spaCy model (fast)
      run: |
        # Use small model for faster CI
        python -m spacy download en_core_web_sm || true
        # Link it as en_core_web_lg for compatibility
        python -m spacy link en_core_web_sm en_core_web_lg || true
      env:
        SPACY_MODEL: en_core_web_sm

    - name: Run tests
      run: pytest tests/ -v --tb=short --cov=cloakpivot --cov-report=term-missing:skip-covered --cov-report=html

    - name: Upload coverage reports
      if: matrix.python-version == '3.12'
      uses: codecov/codecov-action@v3
      with:
        file: ./htmlcov/index.html
        fail_ci_if_error: false

  test-full:
    name: Full Test Suite
    runs-on: ubuntu-latest
    needs: test
    # Only run on main branch or with label
    if: github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'full-tests')
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-full-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-full-
          ${{ runner.os }}-pip-

    - name: Cache spacy models (large)
      uses: actions/cache@v4
      with:
        path: ~/.cache/spacy
        key: ${{ runner.os }}-spacy-lg-v1

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Download large spaCy model
      run: python -m spacy download en_core_web_lg

    - name: Run full test suite
      run: make all
